1.packaging选择pom包？
	父模块的打包类型为pom,同时在pom.xml中给出<module>=>所有的子模块

2.<scope>provided</scope>
	compile：被依赖的项目需要参与编译，默认
	test:	仅仅参与测试的工作，包括测试代码的编译，执行。比较典型的如junit。
	runntime:被依赖的项目无需参与项目的编译，跳过编译，通常和optional一起使用
	provided：打包的时候不用包含进去
3.dependencyManagement
	作用:统一控制依赖的版本，让子项目中引用一个依赖而不用显示的列出版本号
	好处:统一管理项目的版本号，确保应用的各个项目的依赖和版本一致
		  如果子项目想要使用另外的一个版本,只需要在dependencies中声明一个版本号即可,
		  子类就会使用子类声明的版本号，不继承于父类版本号。
	注意点:	只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖
			如果不在子项目中声明依赖，是不会从父项目中继承下来的；
			只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项,并且version和scope都读取自父
			另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本。
4.Properties
	作用:便于版本的维护和管理
	


3.maven 需要安装m2e



4.了解jenv

5.maven的升级版 gradle